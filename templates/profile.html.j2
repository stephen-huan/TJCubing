{% extends "helper/base.html.j2" %}
{% block pageheader %}{% endblock %}

{% block content %}
  {% if "account" in session %}
    <div class="container">
      <div class="row">
        <div class="col-3">
          <figure class="figure" data-toggle="tooltip" data-placement="top" title="Change your profile picture">
            <a href="{{ furl_for('settings') }}" class="link-unstyled">{{ f.img(250) }}</a>
            <figcaption class="mt-2"><h3 class="mb-0">{{ session.get("name", "") }}</h3>
                                     <h3 class="mt-0"><small class="text-muted">{{ session['account'] }}</small></h3>
            </figcaption>
          </figure>

          <h5> {{ session["scope"] | capitalize }} account </h5>
          <form id="deleteform" method="POST">{{ btnform.csrf_token }}{{ f.button("delete", "Delete account", "btn-danger show-alert") }}</form>
        </div>

        {% set curr = request.args.get("tab", "overview") %}
        <div class="col-9">
          <ul class="nav nav-tabs">
            {% for group in tabs %}
              {% if scopes[session.get("scope", "default")] >= loop.index - 1%}
                {% for tab in group %}
                  <li class="nav-item">
                    <a class="nav-link {{ 'active' if tab == curr else '' }}" href="{{ furl_for('profile', tab=tab) }}">{{ tab | capitalize }}</a>
                  </li>
                {% endfor %}
              {% endif %}
            {% endfor %}
          </ul>

          {% if curr == "overview" %}
            <h3 class="mt-4"> ION API status: {{ f.check("ion_token" in session) }}
              <p style="font-size:20px"><small class="text-muted"> ION is used to determine voting/running eligibility, as another factor in 2FA,
                and to scrape data.
              </small></p>
            </h3>
            {% if "ion_token" not in session %}
              <a href="{{ furl_for('ion_login') }}"> Log in </a>
            {% endif %}

            <h3 class="mt-3"> WCA API status: {{ f.check("wca_token" in session) }}
              <p style="font-size:20px"><small class="text-muted"> WCA is used to mark competitions and to determine TJ records.</small></p>
            </h3>
            {% if "wca_token" not in session %}
              <a href="{{ furl_for('wca_login') }}"> Log in </a>
            {% endif %}

            <h3 class="mt-3"> GPG encryption: {{ f.check(user["encrypt"] and user["keys"] | length > 0) }}
              <p style="font-size:20px"><small class="text-muted"> Add a GPG key in the <a href="{{ furl_for('settings', tab='GPG keys')}}">settings</a>
              to enable encryption for emails, cookies, and other files.
              </small></p>
            </h3>

            <hr>

            <h3 class="mt-3"> Cookies {{ f.check(session | length > 0) }} <small>({{ session | length }} parameters)</small>
              <p style="font-size:20px"><small class="text-muted"> Cookies and random *.json files are used to store everything because
              I'm too lazy to use a database. </small></p>
            </h3>

            <!-- Toggle cookies -->
            <p>
              <button class="btn btn-primary" id="toggle" type="button" data-toggle="collapse" data-target="#cookie" aria-expanded="false" aria-controls="cookie">
                Show cookie data
              </button>
              <a name="download" href="{{ furl_for('cookie') }}" download role="button">Download</a>
            </p>

            <div class="collapse" id="cookie">
              <ul>
                {% for key, value in session|dictsort %}
                  <li> {{ "{}: {}".format(key, value) }} </li>
                {% endfor %}
              </ul>
            </div>

            <form method="POST">{{ btnform.csrf_token }}{{ f.button("clear", "Clear cookies?", "btn-warning") }}</form>

          {% elif curr == "API" %}
            {% if "ion_token" in session %}
              <form method="POST">
                {{ ionForm.csrf_token }}
                <div class="input-group mt-4">
                  <div class="input-group-prepend">
                    <span class="input-group-text">https://ion.tjhsst.edu/api/</span>
                  </div>
                  {{ f.render_field(ionForm.call) }}
                  <div class="input-group-append">
                    {{ f.button(classes="btn-outline-secondary") }}
                  </div>
                </div>
              </form>
            {% else %}
              <p class="mt-4"> Please login to ION to enable API calls. </p>
            {% endif %}
            {% if "wca_token" in session %}
              <form method="POST">
                {{ wcaForm.csrf_token }}
                <div class="input-group mt-4">
                  <div class="input-group-prepend">
                    <span class="input-group-text">https://www.worldcubeassociation.org/api/v0/</span>
                  </div>
                  {{ f.render_field(wcaForm.call) }}
                  <div class="input-group-append">
                    {{ f.button(classes="btn-outline-secondary") }}
                  </div>
                </div>
              </form>
              {% else %}
                <p class="mt-4"> Please login to the WCA to enable API calls. </p>
              {% endif %}

            {% if data %}
              <h5 class="mt-3"> Output: </h5>
              {{ data }}
            {% endif %}

          {% elif curr == "email" %}
            <p class="mt-3 mb-0"> Email: <a href="{{ 'mailto:' + clubmail }}">{{ clubmail }}</a> </p>
            <p> Password: {{ clubmailpassword }} </p>

            <div class="container">
              <div class="row">
                <div class="col-6">
                  {{ f.render_form(mailForm, ["recipients", "subject", "email", "log"], f.button("send", "Send email", "btn btn-primary prompt"), id="mdform", recipients={"placeholder": "Recipients: " + ', '.join(emails)}) }}
                </div>
                <!-- HTML replaced by markdown render -->
                <div class="col-6" id="htmlemail"></div>
              </div>
            </div>

          {% elif curr == "develop" %}
            <form method="POST">
              {{ httpForm.csrf_token }}
              <div class="input-group mb-3 mt-4">
                <div class="input-group-prepend">
                  <button class="btn btn-outline-secondary" type="submit">HTTP Status</button>
                </div>
                {{ f.render_field(httpForm.http) }}
              </div>
            </form>

            <ul>
              <li> Appending " H" causes 400 bad request but TJ's nginx server errors <a href="https://activities.tjhsst.edu/cubing/%20H">first</a> </li>
              <li> 404 is <a href="{{ URL + '/test' }}">easy</a> </li>
              <li> <code> curl -X POST http://localhost:5000/</code> causes 405 method not allowed </li>
              <li> Upload a file greater than {{ humanize.naturalsize(config["MAX_CONTENT_LENGTH"]) }} to cause 413 </li>
              <li> 500 is a general purpose error message. </li>
            </ul>

          {% elif curr == "refresh" %}
            <form method="POST">{{ btnform.csrf_token }}{{ f.button("fb", "Facebook profile pictures (will break if done on the website [need some way of inputting 2fa])") }}</form>
            <form method="POST">{{ btnform.csrf_token }}{{ f.button("comps", "Competitions") }}</form>
            <form method="POST">{{ btnform.csrf_token }}{{ f.button("records", "Records") }}</form>
            <form method="POST">{{ btnform.csrf_token }}{{ f.button("heatmap", "Heatmap") }}</form>
            <form method="POST">{{ btnform.csrf_token }}{{ f.button("history", "Club meeting history (requires Ion OAuth)") }}</form>

          {% else %}
            There appears to be nothing here...
          {% endif %}
        </div>
      </div>
    </div>

    <script>
        // Confirm delete
        $(document).on("click", ".show-alert", function(e) {
            bootbox.confirm("Are you sure you want to delete your account?", function(result) {
                window.result = result;
                if (result) {
                  document.getElementById("delete").click();
                  window.result = false;
                }
            });
        });

        $("#deleteform").submit(function( event ) {
          if (window.result) {
            return;
          }
          event.preventDefault();
        });

        $(document).on("click", ".prompt", function(e) {
            bootbox.confirm("Are you sure you want to send the email?", function(result) {
                window.result = result;
                if (result) {
                  $("#send").removeClass("prompt");
                  document.getElementById("send").click();
                  $("#send").addClass("prompt");
                  window.result = false;
                }
            });
        });

        $("#mdform").submit(function( event ) {
          if (window.result) {
            return;
          }
          event.preventDefault();
        });

        // Toggle button text
        $("#toggle").on("click", function(e) {
          a = "Show cookie data";
          b = "Hide cookie data";
          h = $("#cookie").height();
          console.log($("#cookie").width());
          // closed or fully extended
          if (h == 160 | h == 144) {
            this.innerHTML = ($.trim(this.innerHTML) == a ? b : a);
          }
        });

        // Update HTML rendering
        var converter = new showdown.Converter();
        $('#email').keyup(function() {
          $('#htmlemail').html(converter.makeHtml($('#email').val()));
        });

    </script>

  {% else %}
    {% if request.args.get("mode") == "register" %}
      {{ f.render_form(signupForm, ["username", "password", "confirm"], f.button("login")) }}
    {% elif "yubi" in session or "2fa" in session %}
      {% if "yubi" in session %}
        <p> You have U2F enabled! </p>
        {{ f.btn_form("cancel_yubi", "Cancel", "btn-danger") }}

        <script>
          fetch('/api/authenticate/begin', {
            headers: {
              'X-CSRF-Token': "{{ csrf_token() }}",
              'Access-Control-Allow-Origin': '*'
            },
            method: 'POST'
          }).then(function(response) {
            if(response.ok) return response.arrayBuffer();
            throw new Error('No credential available to authenticate!');
          }).then(CBOR.decode).then(function(options) {
            return navigator.credentials.get(options);
          }).catch(function (err) {
            // on error, exit
            document.getElementById("cancel_yubi").click(); 
            throw new Error('Operation canceled!');
          }).then(function(assertion) {
            return fetch('/api/authenticate/complete', {
              method: 'POST',
              headers: {'Content-Type': 'application/cbor',
                        'X-CSRF-Token': "{{ csrf_token() }}"
              },
              body: CBOR.encode({
                "credentialId": new Uint8Array(assertion.rawId),
                "authenticatorData": new Uint8Array(assertion.response.authenticatorData),
                "clientDataJSON": new Uint8Array(assertion.response.clientDataJSON),
                "signature": new Uint8Array(assertion.response.signature)
              })
            })
          }).then(function(response) {
            var stat = response.ok ? 'successful' : 'unsuccessful';
            if (!response.ok) { 
              alert('Authentication ' + stat);
            } 
          }, function(reason) {
            alert(reason);
          }).then(function() {
            location.reload();
          });
        </script>

      {% endif %}

      {% if "yubi" in session and "2fa" in session %} <hr> {% endif %}

      {% if "2fa" in session %}
        <p> You have 2fa enabled! </p>
        {{ f.render_form(codeForm, ["code"], f.button("login_2fa"), f.button("cancel_2fa", "Cancel", "btn-danger ml-3")) }}
      {% endif %}
    {% else %}
      {{ f.render_form(loginForm, ["username", "password"], f.button("login"), '...or register a new account <a href="{}"> here </a>'.format(furl_for("profile", mode="register"))) }}
    {% endif %}
  {% endif %}
{% endblock %}
